{"version":3,"sources":["api/users.ts","services/User.tsx","services/Todo.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","users","userId","find","user","getNewId","todos","Math","max","map","todo","filterTitle","title","filterPattern","split","filter","char","test","join","UserInfo","className","href","TodoInfo","completed","cn","TodoList","defaultTodos","usersFromServer","App","useState","setTodos","value","hasError","setTitle","setUser","action","method","onSubmit","e","newTodo","preventDefault","trim","prevTitle","prevUser","prevTodos","type","placeholder","onChange","target","htmlFor","disabled","currentUser","ReactDOM","render","document","getElementById"],"mappings":"uPAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BCzDJ,SAASC,EAAYC,EAAeC,GACzC,OAAOD,EAAME,MAAK,SAAAC,GAAI,OAAIA,EAAKR,KAAOM,MAAW,KCD5C,IAAMG,EACT,SAACC,GAAD,OAAmBC,KAAKC,IAAL,MAAAD,KAAI,YAAQD,EAAMG,KAAI,SAAAC,GAAI,OAAIA,EAAKd,QAAO,GAEpDe,EAAc,SAACC,GAC1B,IAAMC,EAAgB,yCAEtB,OAAOD,EAAME,MAAM,IAChBC,QAAO,SAAAC,GAAI,OAAIH,EAAcI,KAAKD,MAClCE,KAAK,K,uCCHGC,EAA4B,SAAC,GAAD,IAAGf,EAAH,EAAGA,KAAH,OACvC,mBAAGgB,UAAU,WAAWC,KAAI,iBAAYjB,EAAKL,OAA7C,SAAuDK,EAAKP,QCEjDyB,EAA4B,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KAClCa,EAA2Bb,EAA3Ba,UAAWX,EAAgBF,EAAhBE,MAAOR,EAASM,EAATN,KAE1B,OACE,0BACEgB,UAAWI,IAAG,WAAY,CACxB,sBAAuBD,IAEzB,UAASb,EAAKd,GAJhB,UAME,oBAAIwB,UAAU,kBAAd,SAAiCR,IAChCR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCdlBqB,EAA4B,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,OACvC,yBAASc,UAAU,WAAnB,SACGd,EAAMG,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKd,UCEhC8B,ECZS,CACb,CACE9B,GAAI,EACJgB,MAAO,qBACPW,WAAW,EACXrB,OAAQ,GAEV,CACEN,GAAI,GACJgB,MAAO,kBACPW,WAAW,EACXrB,OAAQ,GAEV,CACEN,GAAI,EACJgB,MAAO,qCACPW,WAAW,EACXrB,OAAQ,IDLiCO,KAAI,SAAAC,GAAI,kCAChDA,GADgD,IAEnDN,KAAMJ,EAAY2B,EAAiBjB,EAAKR,aAG7B0B,EAAgB,WAC3B,MAA0BC,mBAAiBH,GAA3C,mBAAOpB,EAAP,KAAcwB,EAAd,KACA,EAA0BD,mBAAS,CAAEE,MAAO,GAAIC,UAAU,IAA1D,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAAwBJ,mBAAS,CAAEjC,GAAI,EAAGoC,UAAU,IAApD,mBAAO5B,EAAP,KAAa8B,EAAb,KAqCA,OACE,sBAAKd,UAAU,MAAf,UACE,+CAEA,uBACEe,OAAO,aACPC,OAAO,OACPC,SAjCmB,SAACC,GATV,IAACC,GAUfD,EAAEE,iBAEG5B,EAAMmB,MAAMU,QACfR,GAAS,SAACS,GAAD,mBAAC,eAAoBA,GAArB,IAAgCV,UAAU,OAGrC,IAAZ5B,EAAKR,IACPsC,GAAQ,SAACS,GAAD,mBAAC,eAAmBA,GAApB,IAA8BX,UAAU,OAG7CpB,EAAMmB,MAAMU,QAAsB,IAAZrC,EAAKR,MApBjB2C,EAwBP,CACN3C,GAAIS,EAASC,GACbM,MAAOD,EAAYC,EAAMmB,OACzBR,WAAW,EACXrB,OAAQE,EAAKR,GACbQ,KAAMJ,EAAY2B,EAAiBvB,EAAKR,KA5B1CkC,GAAS,SAACc,GAAD,4BAAmBA,GAAnB,CAA8BL,OAIvCN,EAAS,CAAEF,MAAO,GAAIC,UAAU,IAChCE,EAAQ,CAAEtC,GAAI,EAAGoC,UAAU,MAiCzB,UAKE,sBAAKZ,UAAU,QAAf,UACE,2CAEE,uBACEA,UAAU,aACVyB,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZf,MAAOnB,EAAMmB,MACbgB,SACE,SAACT,GAAD,OAAOL,EAAS,CAAEF,MAAOO,EAAEU,OAAOjB,MAAOC,UAAU,UAKxDpB,EAAMoB,UACJ,sBAAMZ,UAAU,QAAhB,qCAGL,sBAAKA,UAAU,QAAf,UACE,uBAAO6B,QAAQ,aAAf,mBACA,yBACErD,GAAG,aACHwB,UAAU,aACV,UAAQ,aACRW,MAAO3B,EAAKR,GACZmD,SAAU,SAAAT,GAAC,OAAIJ,EAAQ,CAAEtC,IAAK0C,EAAEU,OAAOjB,MAAOC,UAAU,KAL1D,UAOE,wBAAQD,MAAM,IAAImB,UAAQ,EAA1B,2BAECvB,EAAgBlB,KAAI,SAAA0C,GAAW,OAC9B,wBAEEpB,MAAOoB,EAAYvD,GAFrB,SAIGuD,EAAYtD,MAHRsD,EAAYvD,UAQtBQ,EAAK4B,UACD,sBAAMZ,UAAU,QAAhB,qCAGP,wBAAQyB,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUvC,MAAOA,QEhHvB8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6dd3cd9d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\n\nexport function getUserById(users: User[], userId: number) {\n  return users.find(user => user.id === userId) || null;\n}\n","import { Todo } from '../types/Todo';\n\nexport const getNewId\n  = (todos: Todo[]) => Math.max(...todos.map(todo => todo.id)) + 1;\n\nexport const filterTitle = (title: string) => {\n  const filterPattern = /[a-zA-Zа-яА-Я0-9 ]/;\n\n  return title.split('')\n    .filter(char => filterPattern.test(char))\n    .join('');\n};\n","import './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>{user.name}</a>\n);\n","import './TodoInfo.scss';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <article\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { getUserById } from './services/User';\nimport { getNewId, filterTitle } from './services/Todo';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst defaultTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(usersFromServer, todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(defaultTodos);\n  const [title, setTitle] = useState({ value: '', hasError: false });\n  const [user, setUser] = useState({ id: 0, hasError: false });\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n  };\n\n  const clearForm = () => {\n    setTitle({ value: '', hasError: false });\n    setUser({ id: 0, hasError: false });\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!title.value.trim()) {\n      setTitle((prevTitle) => ({ ...prevTitle, hasError: true }));\n    }\n\n    if (user.id === 0) {\n      setUser((prevUser) => ({ ...prevUser, hasError: true }));\n    }\n\n    if (!title.value.trim() || user.id === 0) {\n      return;\n    }\n\n    addTodo({\n      id: getNewId(todos),\n      title: filterTitle(title.value),\n      completed: false,\n      userId: user.id,\n      user: getUserById(usersFromServer, user.id),\n    });\n\n    clearForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              className=\"App__input\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title.value}\n              onChange={\n                (e) => setTitle({ value: e.target.value, hasError: false })\n              }\n            />\n          </label>\n\n          {title.hasError\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n          <select\n            id=\"userSelect\"\n            className=\"App__input\"\n            data-cy=\"userSelect\"\n            value={user.id}\n            onChange={e => setUser({ id: +e.target.value, hasError: false })}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(currentUser => (\n              <option\n                key={currentUser.id}\n                value={currentUser.id}\n              >\n                {currentUser.name}\n              </option>\n            ))}\n          </select>\n\n          {user.hasError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}